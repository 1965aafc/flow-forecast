version: 2.1


executors:
  python-executor:
    docker:
      - image: circleci/python:3.7.4
    working_directory: ~/repo


defaults: &defaults
  executor: python-executor
  working_directory: ~/repo

jobs:
  setup_and_install:
    <<: *defaults
    steps:
      - checkout
#      - restore_cache:  # ensure this step occurs *before* installing dependencies
#          key: requirements-v2-{{ .Branch }}-{{ checksum "requirements.txt" }}
#
#      - run:
#          name: install dependencies
#          command: |
#            sudo pip install pipenv
#            sudo pip install --quiet -r requirements.txt
#            sudo python setup.py
#
#      - save_cache:
#          key: requirements-v2-{{ .Branch }}-{{ checksum "requirements.txt" }}
#          paths:
#            - ~/.local
#      - run:
#          command: |
#            echo list files
#            ls -R

  evaluator_test:
    <<: *defaults
    steps:
      - restore_cache:  # ensure this step occurs *before* installing dependencies
          key: requirements-v2-{{ .Branch }}-{{ checksum "requirements.txt" }}

      - run:
          name: install dependencies
          command: |
            sudo pip install pipenv
            sudo pip install --quiet -r requirements.txt
            sudo python setup.py

      - save_cache:
          key: requirements-v2-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - ~/.local
      - run:
          command: |
            echo list files
            ls -R

      - run:
          name: Evaluator tests
          command:
            python ./repo/tests/test_evaluation.py

  data_quality_test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - restore_cache:  # ensure this step occurs *before* installing dependencies
          key: requirements-v2-{{ .Branch }}-{{ checksum "requirements.txt" }}

      - run:
          name: install dependencies
          command: |
            sudo pip install pipenv
            sudo pip install --quiet -r requirements.txt
            sudo python setup.py

      - save_cache:
          key: requirements-v2-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - ~/.local
      - run:
          command: |
            echo list files
            ls -R
      - run:
          command: |
            echo list files
            ls -R
      - run:
          name: Data Quality Tests
          command: |
            python ./repo/tests/data_format_tests.py
            python ./repo/tests/usgs_tests.py
            python ./repo/tests/test_join.py

  model_basic_test:
    <<: *defaults
    steps:
      - restore_cache:  # ensure this step occurs *before* installing dependencies
          key: requirements-v2-{{ .Branch }}-{{ checksum "requirements.txt" }}

      - run:
          name: install dependencies
          command: |
            sudo pip install pipenv
            sudo pip install --quiet -r requirements.txt
            sudo python setup.py

      - save_cache:
          key: requirements-v2-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - ~/.local
      - run:
          command: |
            echo list files
            ls -R

      - run:
          name: Model basic tests
          when: always
          command: |
            python ./repo/tests/time_model_test.py
            python ./repo/tests/pytorc_train_tests.py
            python ./repo/tests/model_config_tests.py
            python ./repo/tests/data_loader_tests.py
            python ./repo/tests/test_da_rnn.py

  decoder_test:
    <<: *defaults
    steps:
      - restore_cache:  # ensure this step occurs *before* installing dependencies
          key: requirements-v2-{{ .Branch }}-{{ checksum "requirements.txt" }}

      - run:
          name: install dependencies
          command: |
            sudo pip install pipenv
            sudo pip install --quiet -r requirements.txt
            sudo python setup.py

      - save_cache:
          key: requirements-v2-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - ~/.local
      - run:
          command: |
            echo list files
            ls -R

      - run:
          name: Decoder tests
          when: always
          command:
            python ./repo/tests/test_decoder.py

  trainer_test:
    <<: *defaults
    steps:
      - restore_cache:  # ensure this step occurs *before* installing dependencies
          key: requirements-v2-{{ .Branch }}-{{ checksum "requirements.txt" }}

      - run:
          name: install dependencies
          command: |
            sudo pip install pipenv
            sudo pip install --quiet -r requirements.txt
            sudo python setup.py

      - save_cache:
          key: requirements-v2-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - ~/.local
      - run:
          command: |
            echo list files
            ls -R

      - run:
          name: Trainer tests
          when: always
          command: |
            python flood_forecast/trainer.py -p ./repo/tests/lstm_test.json
            python flood_forecast/trainer.py -p ./repo/tests/multi_test.json
            python flood_forecast/trainer.py  -p ./repo/ tests/full_transformer.json
            python flood_forecast/trainer.py -p ./repo/tests/decoder_test.json
            python flood_forecast/trainer.py -p ./repo/tests/custom_encode.json

  plot_test:
    <<: *defaults
    steps:
      - restore_cache:  # ensure this step occurs *before* installing dependencies
          key: requirements-v2-{{ .Branch }}-{{ checksum "requirements.txt" }}

      - run:
          name: install dependencies
          command: |
            sudo pip install pipenv
            sudo pip install --quiet -r requirements.txt
            sudo python setup.py

      - save_cache:
          key: requirements-v2-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - ~/.local
      - run:
          command: |
            echo list files
            ls -R

      - run:
          name: plot tests
          when: always
          command:
            python ./repo/tests/test_plot.py

#          - store_artifacts:
#              path: test-reports
#              destination: test-reports

workflows:
  version: 2

  test_and_build:
    jobs:
      - setup_and_install
      - evaluator_test:
          requires:
            - setup_and_install
      - data_quality_test:
          requires:
            - setup_and_install
      - model_basic_test:
          requires:
            - setup_and_install
      - decoder_test:
          requires:
            - setup_and_install
      - trainer_test:
          requires:
            - setup_and_install
      - plot_test:
          requires:
            - setup_and_install
