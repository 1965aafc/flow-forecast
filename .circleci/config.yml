version: 2.1


executors:
  python-executor:
    docker:
      - image: circleci/python:3.7.4
    working_directory: ~/repo


defaults: &defaults
  executor: python-executor
  working_directory: ~/repo

jobs:
  setup_and_install:
    <<: *defaults
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths:
            - .

  evaluator_test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo

      - restore_cache:  # ensure this step occurs *before* installing dependencies
          key: requirements-v2-{{ .Branch }}-{{ checksum "requirements.txt" }}

      - run:
          name: install dependencies
          command: |
            sudo pip install pipenv
            sudo pip install --quiet -r requirements.txt
            sudo python setup.py develop --no-deps

      - save_cache:
          key: requirements-v2-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - ~/.local

      - run:
          name: Evaluator tests
          command:
            python tests/test_evaluation.py

  data_quality_test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - restore_cache:  # ensure this step occurs *before* installing dependencies
          key: requirements-v2-{{ .Branch }}-{{ checksum "requirements.txt" }}

      - run:
          name: install dependencies
          command: |
            sudo pip install pipenv
            sudo pip install --quiet -r requirements.txt
            sudo python setup.py develop --no-deps

      - save_cache:
          key: requirements-v2-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - ~/.local

      - run:
          name: Data Quality Tests
          command: |
            python tests/data_format_tests.py
            python tests/usgs_tests.py
            python tests/test_join.py

  model_basic_test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - restore_cache:  # ensure this step occurs *before* installing dependencies
          key: requirements-v2-{{ .Branch }}-{{ checksum "requirements.txt" }}

      - run:
          name: install dependencies
          command: |
            sudo pip install pipenv
            sudo pip install --quiet -r requirements.txt
            sudo python setup.py develop --no-deps

      - save_cache:
          key: requirements-v2-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - ~/.local

      - run:
          name: Model basic tests
          when: always
          command: |
            python -m unittest -v tests/time_model_test.py
            python -m unittest -v tests/pytorc_train_tests.py
            python -m unittest -v tests/model_config_tests.py
            python -m unittest -v tests/data_loader_tests.py
            python -m unittest -v tests/test_da_rnn.py

  decoder_test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - restore_cache:  # ensure this step occurs *before* installing dependencies
          key: requirements-v2-{{ .Branch }}-{{ checksum "requirements.txt" }}

      - run:
          name: install dependencies
          command: |
            sudo pip install pipenv
            sudo pip install --quiet -r requirements.txt
            sudo python setup.py develop --no-deps

      - save_cache:
          key: requirements-v2-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - ~/.local

      - run:
          name: Decoder tests
          when: always
          command:
            python tests/test_decoder.py

  trainer_test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - restore_cache:  # ensure this step occurs *before* installing dependencies
          key: requirements-v2-{{ .Branch }}-{{ checksum "requirements.txt" }}

      - run:
          name: install dependencies
          command: |
            sudo pip install pipenv
            sudo pip install --quiet -r requirements.txt
            sudo python setup.py develop --no-deps

      - save_cache:
          key: requirements-v2-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - ~/.local

      - run:
          name: Trainer tests
          when: always
          command: |
            echo running trainer_lstm_test
            python flood_forecast/trainer.py -p tests/lstm_test.json
            echo running trainer_multi_test
            python flood_forecast/trainer.py -p tests/multi_test.json
            echo running trainer_full_transformer_test
            python flood_forecast/trainer.py -p  tests/full_transformer.json
            echo running trainer_decoder_test
            python flood_forecast/trainer.py -p tests/decoder_test.json
            echo running trainer_custom_encode
            python flood_forecast/trainer.py -p tests/custom_encode.json

  plot_test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - restore_cache:  # ensure this step occurs *before* installing dependencies
          key: requirements-v2-{{ .Branch }}-{{ checksum "requirements.txt" }}

      - run:
          name: install dependencies
          command: |
            sudo pip install pipenv
            sudo pip install --quiet -r requirements.txt
            sudo python setup.py develop --no-deps

      - save_cache:
          key: requirements-v2-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - ~/.local

      - run:
          name: plot tests
          when: always
          command:
            python tests/test_plot.py

  save_common_artifacts:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - store_artifacts:
          path: test-reports
          destination: test-reports

workflows:
  version: 2

  test_and_build:
    jobs:
      - setup_and_install
      - evaluator_test:
          requires:
            - setup_and_install
      - data_quality_test:
          requires:
            - setup_and_install
      - model_basic_test:
          requires:
            - setup_and_install
      - decoder_test:
          requires:
            - setup_and_install
      - trainer_test:
          requires:
            - setup_and_install
      - plot_test:
          requires:
            - setup_and_install
