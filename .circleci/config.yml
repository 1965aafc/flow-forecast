# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.7.4
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout
      - restore_cache:  # ensure this step occurs *before* installing dependencies
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: install dependencies
          command: |
           sudo pip install pipenv
           sudo pip install -r requirements.txt
           sudo python setup.py develop

        
      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
          
      - run:
          name: run tests
          command: |
            python tests/test_da_rnn.py
            python tests/data_format_tests.py
            python tests/time_model_test.py
            python tests/pytorc_train_tests.py
            python tests/model_config_tests.py
            python tests/usgs_tests.py
            python tests/test_join.py
            python flood_forecast/trainer.py -p tests/multi_test.json
      - store_artifacts:
          path: test-reports
          destination: test-reports